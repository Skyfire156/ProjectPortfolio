/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package simplerogue;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;





/**
 *
 * @author natha_000
 */
public class SimpleRogueGui extends javax.swing.JFrame {
    static Boolean InCombat = true;
    static Monster_stats OpChoice1;
    static Monster_stats OpChoice2;
    static Monster_stats OpChoice3;
    SimpleRogue game;
    /**
     * Creates new form SimpleRogueGui
     */
    public SimpleRogueGui() {
        initComponents();
        game = new SimpleRogue();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        OnWin = new javax.swing.JDialog();
        EndGameRestart = new javax.swing.JButton();
        EndGameExit = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        WinMessage = new javax.swing.JTextPane();
        OnLoss = new javax.swing.JDialog();
        EndGameRestart1 = new javax.swing.JButton();
        EndGameExit1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        WinMessage1 = new javax.swing.JTextPane();
        Menus = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        MainNew = new javax.swing.JButton();
        MainContinue = new javax.swing.JButton();
        MainExit = new javax.swing.JButton();
        MessageFrame = new javax.swing.JScrollPane();
        MessageBox = new javax.swing.JTextPane();
        AttackButton = new javax.swing.JButton();
        ExamineButton = new javax.swing.JButton();
        RetreatButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AbilityList = new javax.swing.JTextPane();
        AbilitiesLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        StatsList = new javax.swing.JTextPane();
        StatsLabel = new javax.swing.JLabel();
        FloorLabel = new javax.swing.JLabel();
        ContinueButton = new javax.swing.JButton();

        OnWin.setAlwaysOnTop(true);
        OnWin.setMinimumSize(new java.awt.Dimension(250, 150));

        EndGameRestart.setText("New Game");
        EndGameRestart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EndGameRestartActionPerformed(evt);
            }
        });

        EndGameExit.setText("Exit");
        EndGameExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EndGameExitActionPerformed(evt);
            }
        });

        WinMessage.setEditable(false);
        WinMessage.setText("Congratulations, Hero!  You have vanquished the forces of darkness!  Truly, your accomplishment is the stuff of legend!");
        jScrollPane2.setViewportView(WinMessage);

        javax.swing.GroupLayout OnWinLayout = new javax.swing.GroupLayout(OnWin.getContentPane());
        OnWin.getContentPane().setLayout(OnWinLayout);
        OnWinLayout.setHorizontalGroup(
            OnWinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OnWinLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OnWinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(OnWinLayout.createSequentialGroup()
                        .addComponent(EndGameRestart)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                        .addComponent(EndGameExit)))
                .addContainerGap())
        );
        OnWinLayout.setVerticalGroup(
            OnWinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OnWinLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(OnWinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EndGameRestart)
                    .addComponent(EndGameExit))
                .addContainerGap())
        );

        OnLoss.setAlwaysOnTop(true);
        OnLoss.setMinimumSize(new java.awt.Dimension(250, 150));

        EndGameRestart1.setText("New Game");
        EndGameRestart1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EndGameRestart1ActionPerformed(evt);
            }
        });

        EndGameExit1.setText("Exit");
        EndGameExit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EndGameExit1ActionPerformed(evt);
            }
        });

        WinMessage1.setEditable(false);
        WinMessage1.setText("Game Over!  You were killed by the forces of darkness before you could attain your goal.");
        jScrollPane4.setViewportView(WinMessage1);

        javax.swing.GroupLayout OnLossLayout = new javax.swing.GroupLayout(OnLoss.getContentPane());
        OnLoss.getContentPane().setLayout(OnLossLayout);
        OnLossLayout.setHorizontalGroup(
            OnLossLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OnLossLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OnLossLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(OnLossLayout.createSequentialGroup()
                        .addComponent(EndGameRestart1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                        .addComponent(EndGameExit1)))
                .addContainerGap())
        );
        OnLossLayout.setVerticalGroup(
            OnLossLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OnLossLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(OnLossLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EndGameRestart1)
                    .addComponent(EndGameExit1))
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Simple Rogue");

        MainNew.setText("New Game");
        MainNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainNewActionPerformed(evt);
            }
        });

        MainContinue.setText("Continue");
        MainContinue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainContinueActionPerformed(evt);
            }
        });

        MainExit.setText("Exit");
        MainExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MenusLayout = new javax.swing.GroupLayout(Menus.getContentPane());
        Menus.getContentPane().setLayout(MenusLayout);
        MenusLayout.setHorizontalGroup(
            MenusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenusLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MenusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MainNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MainContinue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MainExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        MenusLayout.setVerticalGroup(
            MenusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenusLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(MainNew)
                .addGap(18, 18, 18)
                .addComponent(MainContinue)
                .addGap(18, 18, 18)
                .addComponent(MainExit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Menus.setSize(200, 300);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simple Rogue");
        setFocusable(false);

        MessageFrame.setViewportView(MessageBox);

        AttackButton.setText("Attack");
        AttackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttackButtonActionPerformed(evt);
            }
        });
        AttackButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                AttackButtonKeyPressed(evt);
            }
        });

        ExamineButton.setText("Examine");
        ExamineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExamineButtonActionPerformed(evt);
            }
        });

        RetreatButton.setText("Retreat");
        RetreatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RetreatButtonActionPerformed(evt);
            }
        });

        AbilityList.setEditable(false);
        AbilityList.setMinimumSize(new java.awt.Dimension(50, 90));
        AbilityList.setPreferredSize(new java.awt.Dimension(50, 90));
        jScrollPane1.setViewportView(AbilityList);

        AbilitiesLabel.setText("Abilities:");
        AbilitiesLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        StatsList.setEditable(false);
        StatsList.setText("HP: 20\nAtk: 1\nDef: 1\nAcc: 60\nCrit: 1\nDodge: 1");
        jScrollPane3.setViewportView(StatsList);

        StatsLabel.setText("Stats:");

        FloorLabel.setText("Floor: 1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(StatsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FloorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AbilitiesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(19, Short.MAX_VALUE))
                    .addComponent(jScrollPane1)))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {AbilitiesLabel, FloorLabel, StatsLabel, jScrollPane3});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(FloorLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StatsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AbilitiesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
        );

        ContinueButton.setText("Continue");
        ContinueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContinueButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RetreatButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ContinueButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ExamineButton, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AttackButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(MessageFrame, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MessageFrame, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AttackButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ExamineButton)
                    .addComponent(ContinueButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RetreatButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AttackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttackButtonActionPerformed
        // TODO add your handling code here:
        if (InCombat){
        game.Room.Attack();
        game.Room.Hero.Stats_Parse();
        FloorLabel.setText("Floor: "+Encounter.Current_Floor);
        game.Room.Hero.Ability_Parse();
            try {
                game.save(game.Room);
            } catch (IOException ex) {
                Logger.getLogger(SimpleRogueGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else {
            game.Room.Opponent = OpChoice1;
            game.Room.Text_Interface("You now face "+OpChoice1.Name+"\n", true);
            AttackButton.setText("Attack");
            ExamineButton.setText("Examine");
            RetreatButton.setText("Retreat");
            InCombat = true;
            try {
                game.save(game.Room);
            } catch (IOException ex) {
                Logger.getLogger(SimpleRogueGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_AttackButtonActionPerformed

    private void ExamineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExamineButtonActionPerformed
        // TODO add your handling code here:
        if(InCombat){
        game.Room.Examine();
        game.Room.Hero.Stats_Parse();
        FloorLabel.setText("Floor: "+Encounter.Current_Floor);
        game.Room.Hero.Ability_Parse();
        try {
                game.save(game.Room);
            } catch (IOException ex) {
                Logger.getLogger(SimpleRogueGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else {
            game.Room.Opponent = OpChoice2;
            game.Room.Text_Interface("You now face "+OpChoice2.Name+"\n", true);
            AttackButton.setText("Attack");
            ExamineButton.setText("Examine");
            RetreatButton.setText("Retreat");
            InCombat = true;
            try {
                game.save(game.Room);
            } catch (IOException ex) {
                Logger.getLogger(SimpleRogueGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_ExamineButtonActionPerformed
    
    private void RetreatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RetreatButtonActionPerformed
        // TODO add your handling code here:
        if (InCombat){
        game.Room.Retreat();
        game.Room.Hero.Stats_Parse();
        FloorLabel.setText("Floor: "+Encounter.Current_Floor);
        game.Room.Hero.Ability_Parse();
        try {
                game.save(game.Room);
            } catch (IOException ex) {
                Logger.getLogger(SimpleRogueGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else {
            game.Room.Opponent = OpChoice3;
            game.Room.Text_Interface("You now face "+OpChoice3.Name+"\n", true);
            AttackButton.setText("Attack");
            ExamineButton.setText("Examine");
            RetreatButton.setText("Retreat");
            InCombat = true;
            try {
                game.save(game.Room);
            } catch (IOException ex) {
                Logger.getLogger(SimpleRogueGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_RetreatButtonActionPerformed

    private void EndGameExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EndGameExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_EndGameExitActionPerformed

    private void EndGameRestartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EndGameRestartActionPerformed
        // TODO add your handling code here:
        Encounter.Current_Floor = 1;
        game.main();
        game.New_Encounter();
        game.Room.Hero.Stats_Parse();
        FloorLabel.setText("Floor: "+Encounter.Current_Floor);
        game.Room.Hero.Ability_Parse();
        OnWin.setVisible(false);
        try {
                game.save(game.Room);
            } catch (IOException ex) {
                Logger.getLogger(SimpleRogueGui.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_EndGameRestartActionPerformed

    private void EndGameRestart1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EndGameRestart1ActionPerformed
        // TODO add your handling code here:
        Encounter.Current_Floor = 1;
        game.main();
        game.New_Encounter();
        game.Room.Hero.Stats_Parse();
        FloorLabel.setText("Floor: "+Encounter.Current_Floor);
        game.Room.Hero.Ability_Parse();
        OnLoss.setVisible(false);
        AttackButton.setEnabled(true);
        ExamineButton.setEnabled(true);
        RetreatButton.setEnabled(true);
        try {
                game.save(game.Room);
            } catch (IOException ex) {
                Logger.getLogger(SimpleRogueGui.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_EndGameRestart1ActionPerformed

    private void EndGameExit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EndGameExit1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_EndGameExit1ActionPerformed

    private void ContinueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContinueButtonActionPerformed
        // TODO add your handling code here:
        ContinueButton.setVisible(false);
        AttackButton.setVisible(true);
        ExamineButton.setVisible(true);
        RetreatButton.setVisible(true);
        if (game.Room.Current_Floor == 1){
            game.Room.New_Opponent();
            game.Room.Text_Interface("You now face "+game.Room.Opponent.Name+"\n", true);
        }
        else{
            game.Room.Monster_Death();
            game.Room.Hero.Stats_Parse();
            FloorLabel.setText("Floor: "+Encounter.Current_Floor);
            game.Room.Hero.Ability_Parse();
        }
    }//GEN-LAST:event_ContinueButtonActionPerformed

    private void MainExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_MainExitActionPerformed

    private void MainNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainNewActionPerformed
        // TODO add your handling code here:
        SimpleRogueGui.Menus.setVisible(false);
        new SimpleRogueGui().setVisible(true);
        game.main();
        game.New_Encounter();
    }//GEN-LAST:event_MainNewActionPerformed

    private void MainContinueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainContinueActionPerformed
        // TODO add your handling code here:
        Encounter room= null;
        try {
            room = game.load();
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(SimpleRogueGui.class.getName()).log(Level.SEVERE, null, ex);
            MainContinue.setText("Ack!");
        }
        if(room != null){
            SimpleRogueGui.Menus.setVisible(false);
            new SimpleRogueGui().setVisible(true);
            SimpleRogue.Room = room;
            SimpleRogue.main();
            Encounter.Current_Floor = SimpleRogue.Room.Private_Current;
            ContinueButton.setVisible(false);
            SimpleRogue.Room.Hero.Stats_Parse();
            FloorLabel.setText("Floor: "+Encounter.Current_Floor);
            SimpleRogue.Room.Hero.Ability_Parse();
            SimpleRogue.Room.Text_Interface("You return to face "+SimpleRogue.Room.Opponent.Name);
        }
        
        else{
            MainContinue.setText("No Save Found");
        }
    }//GEN-LAST:event_MainContinueActionPerformed

    private void AttackButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AttackButtonKeyPressed
        // TODO add your handling code here:
        if(evt.equals('1')){
            if (InCombat){
                game.Room.Attack();
                game.Room.Hero.Stats_Parse();
                FloorLabel.setText("Floor: "+Encounter.Current_Floor);
                game.Room.Hero.Ability_Parse();
                    try {
                        game.save(game.Room);
                    } catch (IOException ex) {
                        Logger.getLogger(SimpleRogueGui.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else {
                game.Room.Opponent = OpChoice1;
                game.Room.Text_Interface("You now face "+OpChoice1.Name+"\n", true);
                AttackButton.setText("Attack");
                ExamineButton.setText("Examine");
                RetreatButton.setText("Retreat");
                InCombat = true;
                try {
                    game.save(game.Room);
                } catch (IOException ex) {
                    Logger.getLogger(SimpleRogueGui.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_AttackButtonKeyPressed

    public static void Monster_Choice(Monster_stats name1, Monster_stats name2, Monster_stats name3){
        AttackButton.setText(name1.Name);
        OpChoice1 = name1;
        ExamineButton.setText(name2.Name);
        OpChoice2 = name2;
        RetreatButton.setText(name3.Name);
        OpChoice3 = name3;
        InCombat = false;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SimpleRogueGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SimpleRogueGui().setVisible(false);
                SimpleRogueGui.Menus.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AbilitiesLabel;
    public static javax.swing.JTextPane AbilityList;
    public static javax.swing.JButton AttackButton;
    public static javax.swing.JButton ContinueButton;
    private javax.swing.JButton EndGameExit;
    private javax.swing.JButton EndGameExit1;
    private javax.swing.JButton EndGameRestart;
    private javax.swing.JButton EndGameRestart1;
    public static javax.swing.JButton ExamineButton;
    public static javax.swing.JLabel FloorLabel;
    private javax.swing.JButton MainContinue;
    private javax.swing.JButton MainExit;
    private javax.swing.JButton MainNew;
    private static javax.swing.JFrame Menus;
    public static javax.swing.JTextPane MessageBox;
    public static javax.swing.JScrollPane MessageFrame;
    public static javax.swing.JDialog OnLoss;
    public static javax.swing.JDialog OnWin;
    public static javax.swing.JButton RetreatButton;
    public static javax.swing.JLabel StatsLabel;
    public static javax.swing.JTextPane StatsList;
    private javax.swing.JTextPane WinMessage;
    private javax.swing.JTextPane WinMessage1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}

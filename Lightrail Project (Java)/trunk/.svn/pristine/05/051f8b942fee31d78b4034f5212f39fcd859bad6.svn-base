import java.util.List;
import java.util.ArrayList;
import java.util.Collection;
/**
 * Light-rail model initialization and simulation.
 *
 * @author Dr. Jody Paul
 * @version 1.1 ($Id$)
 */
public class Simulation {
    /** The model route. */
    private Route modelRoute;
    /** The model departure schedule. */
    private Schedule modelSchedule;
    /** The model minimum wait time at a station. */
    private Time modelMinimumWaitTime;
    /** The model maximum nuber of passengers per train. */
    private Integer modelPassengersPerTrain;
    /** The model passenger boarding function. */
    private BoardingFunction modelBoardingFn;
    /** The model function for passenger arrivals at a station. */
    private PassengerArrivalFunction modelArrivalFn;

    /** Trains known to this simulation. */
    private List<Train> knownTrains = new ArrayList<Train>();

    /** Stations known to this simulation. */
    private List<Station> knownStations = new ArrayList<Station>();

    /**
     * Model initialization with fixed sized trains
     * and the same passenger arrival function for
     * every station on the route.
     * Sets up the following simulation parameters:
     * route,
     * departure schedule,
     * minimum wait time,
     * maximum number of passengers per train,
     * boarding function,
     * passenger arrival function.
     * @param route the light-rail route
     * @param schedule the daily schedule
     * @param minWaitTime the minimum wait time at a station
     * @param maxPassengers the maximum number of passengers per train
     * @param boardingFunc the boarding function
     * @param arrivalFunc the passenger arrival function
     */
    public void initializeModel(final Route route,
                                final Schedule schedule,
                                final Time minWaitTime,
                                final Integer maxPassengers,
                                final BoardingFunction boardingFunc,
                                final PassengerArrivalFunction arrivalFunc) {
        this.modelRoute = route;
        this.modelSchedule = schedule;
        this.modelMinimumWaitTime = minWaitTime;
        this.modelPassengersPerTrain = maxPassengers;
        this.modelBoardingFn = boardingFunc;
        this.modelArrivalFn = arrivalFunc;
    }

    /**
     * Advances simulation by specified amount of time.
     * @param duration the amount of time to advice simulation
     */
    public void advanceSimulation(final Time duration) {
    }

    /**
     * Determines current number of clumps of trains.
     * Only trains at a station or blocked by a train
     * at a station participate in a clump.
     * A clump consists of one or more trains.
     * @return the number of clumps
     */
    public Integer numberOfClumps() {
        return null;
    }

    /**
     * Retrieves the trains currently in the simulation.
     * @return the trains in this simulation
     */
    public Collection<Train> trains() {
        return this.knownTrains;
    }

    /**
     * Retrieves the stations currently in the simulation.
     * @return the stations in this simulation
     */
    public Collection<Station> stations() {
        return this.knownStations;
    }

    /**
     * Renders the current state of the model as a displayable string.
     * ToDo: Render actual content
     * @return textual rendering of model state
     */
    @Override
    public String toString() {
        return "Model State:\n";
    }
}
